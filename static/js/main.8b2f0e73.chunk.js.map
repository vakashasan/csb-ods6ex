{"version":3,"sources":["store/reducer/index.js","store/index.js","button.js","store/action/index.js","App.js","index.js"],"names":["INITIALSTATE","globalcolor","colorReducer","state","action","type","store","createStore","applyMiddleware","thunk","BUTTON","dispatch","useDispatch","className","onClick","App","selector","useSelector","rootElement","document","getElementById","createRoot","render"],"mappings":"iKAAMA,EAAe,CACnBC,YAAa,SAwBAC,EArBM,WAAmC,IAAlCC,EAAK,uDAAGH,EAAcI,EAAM,uCAChD,OAAQA,EAAOC,MACb,IAAK,MACH,MAAO,CACLJ,YAAa,OAEjB,IAAK,OACH,MAAO,CACLA,YAAa,QAEjB,IAAK,QACH,MAAO,CACLA,YAAa,SAEjB,QACE,OAAO,eACFE,GAGX,ECnBMG,EAAQC,YAAYL,EAAcM,YAAgBC,M,cCGzC,SAASC,IACtB,IAAMC,EAAWC,cAcjB,OACE,gCACE,yBAAQC,UAAU,MAAMC,QAdV,WAChBH,GCVK,SAACA,GACNA,EAAS,CACPN,KAAM,OAEV,GDOA,EAY+C,UACxC,IAAG,MACA,OAEN,yBAAQQ,UAAU,MAAMC,QAdT,WACjBH,GCNK,SAACA,GACNA,EAAS,CACPN,KAAM,QAEV,GDGA,EAYgD,UACzC,IAAG,OACC,OAEP,yBAAQQ,UAAU,MAAMC,QAdR,WAClBH,GCFK,SAACA,GACNA,EAAS,CACPN,KAAM,SAEV,GDDA,EAYiD,UAC1C,IAAG,QACE,OAER,yBAGN,C,MEnCe,SAASU,IACtB,IAAMC,EAAWC,aAAY,SAACd,GAAK,OAAKA,EAAMF,WAAW,IACzD,OACE,sBAAKY,UAAU,MAAK,UAClB,cAACH,EAAM,IACP,sBAAKG,UAAWG,EAAS,UACvB,mCAAMA,EAAQ,OACd,uEAIR,CCVA,IAAME,EAAcC,SAASC,eAAe,QAC/BC,qBAAWH,GAEnBI,OACH,cAAC,IAAQ,CAAChB,MAAOA,EAAM,SACrB,cAACS,EAAG,M","file":"static/js/main.8b2f0e73.chunk.js","sourcesContent":["const INITIALSTATE = {\r\n  globalcolor: \"white\"\r\n};\r\n\r\nconst colorReducer = (state = INITIALSTATE, action) => {\r\n  switch (action.type) {\r\n    case \"RED\":\r\n      return {\r\n        globalcolor: \"RED\"\r\n      };\r\n    case \"BLUE\":\r\n      return {\r\n        globalcolor: \"BLUE\"\r\n      };\r\n    case \"GREEN\":\r\n      return {\r\n        globalcolor: \"GREEN\"\r\n      };\r\n    default:\r\n      return {\r\n        ...state\r\n      };\r\n  }\r\n};\r\n\r\nexport default colorReducer;\r\n","import { applyMiddleware, createStore } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport colorReducer from \"./reducer\";\r\n\r\nconst store = createStore(colorReducer, applyMiddleware(thunk));\r\n\r\nexport { store };\r\n","import { useDispatch } from \"react-redux\";\r\nimport {\r\n  RedColorChange,\r\n  BlueColorChange,\r\n  GreenColorChange\r\n} from \"./store/action\";\r\n\r\nexport default function BUTTON() {\r\n  const dispatch = useDispatch();\r\n\r\n  const handleRed = () => {\r\n    dispatch(RedColorChange());\r\n  };\r\n\r\n  const handleBlue = () => {\r\n    dispatch(BlueColorChange());\r\n  };\r\n\r\n  const handleGreen = () => {\r\n    dispatch(GreenColorChange());\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <button className=\"btn\" onClick={handleRed}>\r\n        {\" \"}\r\n        Red{\" \"}\r\n      </button>\r\n      <button className=\"btn\" onClick={handleBlue}>\r\n        {\" \"}\r\n        Blue{\" \"}\r\n      </button>\r\n      <button className=\"btn\" onClick={handleGreen}>\r\n        {\" \"}\r\n        Green{\" \"}\r\n      </button>\r\n      <hr />\r\n    </div>\r\n  );\r\n}\r\n","const RedColorChange = () => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: \"RED\"\r\n    });\r\n  };\r\n};\r\n\r\nconst BlueColorChange = () => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: \"BLUE\"\r\n    });\r\n  };\r\n};\r\n\r\nconst GreenColorChange = () => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: \"GREEN\"\r\n    });\r\n  };\r\n};\r\n\r\nexport { RedColorChange, BlueColorChange, GreenColorChange };\r\n","import { useSelector } from \"react-redux\";\nimport BUTTON from \"./button\";\nimport \"./styles.css\";\n\nexport default function App() {\n  const selector = useSelector((state) => state.globalcolor);\n  return (\n    <div className=\"App\">\n      <BUTTON />\n      <div className={selector}>\n        <h1> {selector} </h1>\n        <h2> Click on Button To Change Color</h2>\n      </div>\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport { store } from \"./store\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(\n  <Provider store={store}>\n    <App />\n  </Provider>\n);\n"],"sourceRoot":""}